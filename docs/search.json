[
  {
    "objectID": "code_of_conduct.html#correction",
    "href": "code_of_conduct.html#correction",
    "title": "Contributor Covenant Code of Conduct",
    "section": "1. Correction",
    "text": "1. Correction\nCommunity Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.\nConsequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested."
  },
  {
    "objectID": "code_of_conduct.html#warning",
    "href": "code_of_conduct.html#warning",
    "title": "Contributor Covenant Code of Conduct",
    "section": "2. Warning",
    "text": "2. Warning\nCommunity Impact: A violation through a single incident or series of actions.\nConsequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban."
  },
  {
    "objectID": "code_of_conduct.html#temporary-ban",
    "href": "code_of_conduct.html#temporary-ban",
    "title": "Contributor Covenant Code of Conduct",
    "section": "3. Temporary Ban",
    "text": "3. Temporary Ban\nCommunity Impact: A serious violation of community standards, including sustained inappropriate behavior.\nConsequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban."
  },
  {
    "objectID": "code_of_conduct.html#permanent-ban",
    "href": "code_of_conduct.html#permanent-ban",
    "title": "Contributor Covenant Code of Conduct",
    "section": "4. Permanent Ban",
    "text": "4. Permanent Ban\nCommunity Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.\nConsequence: A permanent ban from any sort of public interaction within the community."
  },
  {
    "objectID": "LICENSE.html",
    "href": "LICENSE.html",
    "title": "MIT License",
    "section": "",
    "text": "Copyright © 2021 Arthur Turrell\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nThe software is provided \"as is\", without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software."
  },
  {
    "objectID": "CONTRIBUTING.html",
    "href": "CONTRIBUTING.html",
    "title": "Contributing",
    "section": "",
    "text": "Thank you for your interest in improving this project. This project is open-source under the MIT license and welcomes contributions in the form of bug reports, feature requests, and pull requests.\nHere is a list of important resources for contributors:\n\nSource Code\nDocumentation\nIssue Tracker\nCode of Conduct\n\n\nHow to report a bug\nReport bugs on the Issue Tracker.\nWhen filing an issue, make sure to answer these questions:\n\nWhich operating system and Python version are you using?\nWhich version of this project are you using?\nWhat did you do?\nWhat did you expect to see?\nWhat did you see instead?\n\nThe best way to get your bug fixed is to provide a test case, and/or steps to reproduce the issue.\n\n\nHow to request a feature\nRequest features on the Issue Tracker.\n\n\nHow to set up your development environment\nYou need Python and the following tools:\n\nPoetry\nNox\nnox-poetry\nQuarto\nMake]\n\nInstall the package with development requirements:\n$ poetry install\nYou can now run an interactive Python session, or the command-line interface:\n$ poetry run python\n$ poetry run skimpy\n\n\nHow to test the project\nRun the full test suite:\n$ nox\nList the available Nox sessions:\n$ nox --list-sessions\nYou can also run a specific Nox session. For example, invoke the unit test suite like this:\n$ nox --session=tests\nUnit tests are located in the tests directory, and are written using the pytest testing framework.\nYou may need to use, for example, poetry run nox to ensure that the tests are run in the right environment.\nFor the pre-commit checks, use\n$ poetry run pre-commit run --all-files\n\n\nHow to submit changes\nOpen a pull request to submit changes to this project.\nYour pull request needs to meet the following guidelines for acceptance:\n\nThe Nox test suite must pass without errors and warnings.\nInclude unit tests. This project aims to maintain 100% code coverage.\nIf your changes add functionality, update the documentation accordingly.\n\nFeel free to submit early, though—we can always iterate on this.\nTo run linting and code formatting checks before commiting your change, you can install pre-commit as a Git hook by running the following command:\n$ nox --session=pre-commit -- install\nIt is recommended to open an issue before starting work on anything. This will allow a chance to talk it over with the owners and validate your approach."
  },
  {
    "objectID": "index.html#quickstart",
    "href": "index.html#quickstart",
    "title": "skimpy",
    "section": "Quickstart",
    "text": "Quickstart\nskim a dataframe and produce summary statistics within the console using:\nfrom skimpy import skim\n\nskim(df)\nwhere df is a dataframe.\nIf you need to a dataset to try skimpy out on, you can use the built-in test dataframe:\nfrom skimpy import skim, generate_test_data\n\ndf = generate_test_data()\nskim(df)\n╭───────────────────────────────────── skimpy summary ──────────────────────────────────────╮\n│          Data Summary                Data Types               Categories                  │\n│ ┏━━━━━━━━━━━━━━━━━━━┳━━━━━━━━┓ ┏━━━━━━━━━━━━━┳━━━━━━━┓ ┏━━━━━━━━━━━━━━━━━━━━━━━┓          │\n│ ┃ dataframe         ┃ Values ┃ ┃ Column Type ┃ Count ┃ ┃ Categorical Variables ┃          │\n│ ┡━━━━━━━━━━━━━━━━━━━╇━━━━━━━━┩ ┡━━━━━━━━━━━━━╇━━━━━━━┩ ┡━━━━━━━━━━━━━━━━━━━━━━━┩          │\n│ │ Number of rows    │ 1000   │ │ float64     │ 3     │ │ class                 │          │\n│ │ Number of columns │ 10     │ │ category    │ 2     │ │ location              │          │\n│ └───────────────────┴────────┘ │ datetime64  │ 2     │ └───────────────────────┘          │\n│                                │ int64       │ 1     │                                    │\n│                                │ bool        │ 1     │                                    │\n│                                │ string      │ 1     │                                    │\n│                                └─────────────┴───────┘                                    │\n│                                          number                                           │\n│ ┏━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━┳━━━━━━┳━━━━━━━━━┳━━━━━━━┳━━━━━━┳━━━━━━┳━━━━━━━━┓  │\n│ ┃        ┃ missing ┃ complete  ┃ mean  ┃ sd   ┃ p0      ┃ p25   ┃ p75  ┃ p100 ┃ hist   ┃  │\n│ ┃        ┃         ┃ rate      ┃       ┃      ┃         ┃       ┃      ┃      ┃        ┃  │\n│ ┡━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━╇━━━━━━╇━━━━━━━━━╇━━━━━━━╇━━━━━━╇━━━━━━╇━━━━━━━━┩  │\n│ │ length │       0 │         1 │   0.5 │ 0.36 │ 1.6e-06 │  0.13 │ 0.86 │    1 │ █▃▃▃▄█ │  │\n│ │ width  │       0 │         1 │     2 │  1.9 │  0.0021 │   0.6 │    3 │   14 │  █▃▁   │  │\n│ │ depth  │       0 │         1 │    10 │  3.2 │       2 │     8 │   12 │   20 │ ▁▄█▆▃▁ │  │\n│ │ rnd    │     120 │      0.88 │ -0.02 │    1 │    -2.8 │ -0.74 │ 0.66 │  3.7 │ ▁▄█▅▁  │  │\n│ └────────┴─────────┴───────────┴───────┴──────┴─────────┴───────┴──────┴──────┴────────┘  │\n│                                         category                                          │\n│ ┏━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓  │\n│ ┃                 ┃ missing       ┃ complete rate          ┃ ordered      ┃ unique     ┃  │\n│ ┡━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩  │\n│ │ class           │             0 │                      1 │ False        │          2 │  │\n│ │ location        │             1 │                      1 │ False        │          5 │  │\n│ └─────────────────┴───────────────┴────────────────────────┴──────────────┴────────────┘  │\n│                                         datetime                                          │\n│ ┏━━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━┓  │\n│ ┃                ┃ missing  ┃ complete rate   ┃ first        ┃ last        ┃ frequency ┃  │\n│ ┡━━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━┩  │\n│ │ date           │        0 │               1 │  2018-01-31  │ 2101-04-30  │ M         │  │\n│ │ date_no_freq   │        3 │               1 │  1992-01-05  │ 2023-03-04  │ None      │  │\n│ └────────────────┴──────────┴─────────────────┴──────────────┴─────────────┴───────────┘  │\n│                                          string                                           │\n│ ┏━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┓  │\n│ ┃         ┃ missing     ┃ complete rate       ┃ words per row       ┃ total words      ┃  │\n│ ┡━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━┩  │\n│ │ text    │           6 │                0.99 │                 5.8 │             5800 │  │\n│ └─────────┴─────────────┴─────────────────────┴─────────────────────┴──────────────────┘  │\n│                                           bool                                            │\n│ ┏━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┓  │\n│ ┃                          ┃ true         ┃ true rate               ┃ hist             ┃  │\n│ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━┩  │\n│ │ booly_col                │          520 │                    0.52 │      █    █      │  │\n│ └──────────────────────────┴──────────────┴─────────────────────────┴──────────────────┘  │\n╰─────────────────────────────────────────── End ───────────────────────────────────────────╯\n\nIt is recommended that you set your datatypes before using skimpy (for example converting any text columns to pandas string datatype), as this will produce richer statistical summaries. However, the skim function will try and guess what the datatypes of your columns are.\nYou can find a full list of requirements in the pyproject.toml file. The main requirements are:\n\n\npython >=3.7.1,<4.0.0\nclick 7.1.2\nrich ^10.9.0\npandas ^1.3.2\nPygments ^2.10.0\ntypeguard ^2.12.1\n\n\nYou can try this package out right now in your browser using this Google Colab notebook (requires a Google account). Note that the Google Colab notebook uses the latest package released on PyPI (rather than the development release)."
  },
  {
    "objectID": "index.html#installation",
    "href": "index.html#installation",
    "title": "skimpy",
    "section": "Installation",
    "text": "Installation\nYou can install the latest release of skimpy via pip from PyPI:\n$ pip install skimpy\nTo install the development version from git, use:\n$ pip install git+https://github.com/aeturrell/skimpy.git\nFor development, see the Contributor Guide."
  },
  {
    "objectID": "index.html#usage",
    "href": "index.html#usage",
    "title": "skimpy",
    "section": "Usage",
    "text": "Usage\nThis package is mostly designed to be used within an interactive console session or Jupyter notebook\nfrom skimpy import skim\n\nskim(df)\nHowever, you can also use it on the command line:\n$ skimpy file.csv"
  },
  {
    "objectID": "index.html#features",
    "href": "index.html#features",
    "title": "skimpy",
    "section": "Features",
    "text": "Features\n\nSupport for boolean, numeric, datetime, string, and category datatypes\nCommand line interface in addition to interactive console functionality\nLight weight, with results printed to terminal using the rich package.\nSupport for different colours for different types of output\nRounds numerical output to 2 significant figures\n\nskim accepts keyword arguments that change the colour of the top level column headers. For example, to change the colour to magenta, it’s\n\nskim(df, header_style=\"italic magenta\")\n\n╭───────────────────────────────────── skimpy summary ──────────────────────────────────────╮\n│          Data Summary                Data Types               Categories                  │\n│ ┏━━━━━━━━━━━━━━━━━━━┳━━━━━━━━┓ ┏━━━━━━━━━━━━━┳━━━━━━━┓ ┏━━━━━━━━━━━━━━━━━━━━━━━┓          │\n│ ┃ dataframe         ┃ Values ┃ ┃ Column Type ┃ Count ┃ ┃ Categorical Variables ┃          │\n│ ┡━━━━━━━━━━━━━━━━━━━╇━━━━━━━━┩ ┡━━━━━━━━━━━━━╇━━━━━━━┩ ┡━━━━━━━━━━━━━━━━━━━━━━━┩          │\n│ │ Number of rows    │ 1000   │ │ float64     │ 3     │ │ class                 │          │\n│ │ Number of columns │ 10     │ │ category    │ 2     │ │ location              │          │\n│ └───────────────────┴────────┘ │ datetime64  │ 2     │ └───────────────────────┘          │\n│                                │ int64       │ 1     │                                    │\n│                                │ bool        │ 1     │                                    │\n│                                │ string      │ 1     │                                    │\n│                                └─────────────┴───────┘                                    │\n│                                          number                                           │\n│ ┏━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━┳━━━━━━┳━━━━━━━━━┳━━━━━━━┳━━━━━━┳━━━━━━┳━━━━━━━━┓  │\n│ ┃        ┃ missing ┃ complete  ┃ mean  ┃ sd   ┃ p0      ┃ p25   ┃ p75  ┃ p100 ┃ hist   ┃  │\n│ ┃        ┃         ┃ rate      ┃       ┃      ┃         ┃       ┃      ┃      ┃        ┃  │\n│ ┡━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━╇━━━━━━╇━━━━━━━━━╇━━━━━━━╇━━━━━━╇━━━━━━╇━━━━━━━━┩  │\n│ │ length │       0 │         1 │   0.5 │ 0.36 │ 1.6e-06 │  0.13 │ 0.86 │    1 │ █▃▃▃▄█ │  │\n│ │ width  │       0 │         1 │     2 │  1.9 │  0.0021 │   0.6 │    3 │   14 │  █▃▁   │  │\n│ │ depth  │       0 │         1 │    10 │  3.2 │       2 │     8 │   12 │   20 │ ▁▄█▆▃▁ │  │\n│ │ rnd    │     120 │      0.88 │ -0.02 │    1 │    -2.8 │ -0.74 │ 0.66 │  3.7 │ ▁▄█▅▁  │  │\n│ └────────┴─────────┴───────────┴───────┴──────┴─────────┴───────┴──────┴──────┴────────┘  │\n│                                         category                                          │\n│ ┏━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓  │\n│ ┃                 ┃ missing       ┃ complete rate          ┃ ordered      ┃ unique     ┃  │\n│ ┡━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩  │\n│ │ class           │             0 │                      1 │ False        │          2 │  │\n│ │ location        │             1 │                      1 │ False        │          5 │  │\n│ └─────────────────┴───────────────┴────────────────────────┴──────────────┴────────────┘  │\n│                                         datetime                                          │\n│ ┏━━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━┓  │\n│ ┃                ┃ missing  ┃ complete rate   ┃ first        ┃ last        ┃ frequency ┃  │\n│ ┡━━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━┩  │\n│ │ date           │        0 │               1 │  2018-01-31  │ 2101-04-30  │ M         │  │\n│ │ date_no_freq   │        3 │               1 │  1992-01-05  │ 2023-03-04  │ None      │  │\n│ └────────────────┴──────────┴─────────────────┴──────────────┴─────────────┴───────────┘  │\n│                                          string                                           │\n│ ┏━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┓  │\n│ ┃         ┃ missing     ┃ complete rate       ┃ words per row       ┃ total words      ┃  │\n│ ┡━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━┩  │\n│ │ text    │           6 │                0.99 │                 5.8 │             5800 │  │\n│ └─────────┴─────────────┴─────────────────────┴─────────────────────┴──────────────────┘  │\n│                                           bool                                            │\n│ ┏━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┓  │\n│ ┃                          ┃ true         ┃ true rate               ┃ hist             ┃  │\n│ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━┩  │\n│ │ booly_col                │          520 │                    0.52 │      █    █      │  │\n│ └──────────────────────────┴──────────────┴─────────────────────────┴──────────────────┘  │\n╰─────────────────────────────────────────── End ───────────────────────────────────────────╯"
  },
  {
    "objectID": "index.html#contributing",
    "href": "index.html#contributing",
    "title": "skimpy",
    "section": "Contributing",
    "text": "Contributing\nContributions are very welcome. To learn more, see the Contributor Guide.\nNote that you will need Quarto and Make installed to build the docs. You can preview the docs using poetry run quarto preview skimpy-homepage/"
  },
  {
    "objectID": "index.html#license",
    "href": "index.html#license",
    "title": "skimpy",
    "section": "License",
    "text": "License\nDistributed under the terms of the MIT license, skimpy is free and open source software."
  },
  {
    "objectID": "index.html#issues",
    "href": "index.html#issues",
    "title": "skimpy",
    "section": "Issues",
    "text": "Issues\nIf you encounter any problems, please file an issue along with a detailed description."
  },
  {
    "objectID": "index.html#credits",
    "href": "index.html#credits",
    "title": "skimpy",
    "section": "Credits",
    "text": "Credits\nThis project was generated from @cjolowicz's Hypermodern Python Cookiecutter template.\nskimpy was inspired by the R package skimr and by exploratory Python packages including pandas_profiling and dataprep.\nThe package is built with poetry, while the documentation is built with Quarto. Tests are run with nox."
  }
]